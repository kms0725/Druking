all_review6 = gsub("[~!?:@]", " ", all_review5)
all_review6 = gsub("~", " ", all_review5)
all_review7 = gsub("!", " ", all_review6)
#명사단어만남기기
noun1 <- sapply(all_review6, extractNoun, USE.NAMES = F)
write(noun1, "review.txt")
#명사단어만남기기
noun1 <- sapply(all_review7, extractNoun, USE.NAMES = F)
View(noun1)
write(noun1, "review.txt")
write(all_review, "review.txt")
all_review4 = gsub(",", " ", all_review3)
all_review5 = gsub("[A-Za-z0-9]", "", all_review4)
all_review6 = gsub("[~-)", "", all_review5)
all_review7 = gsub("!", "", all_review6)
write(all_review7, "review.txt")
all_review7 = gsub("?", "", all_review6)
write(all_review7, "review.txt")
all_review5 = gsub("[A-Za-z0-9]", "", all_review4)
all_review6 = gsub("[~-)", "", all_review5)
all_review7 = gsub("?", "", all_review6)
write(all_review7, "review.txt")
all_review7 = gsub("[?]", "", all_review6)
write(all_review7, "review.txt")
all_review6 = gsub("[~-)]", "", all_review5)
all_review6 = gsub("~", "", all_review5)
all_review7 = gsub("?", "", all_review6)
all_review8 = gsub("!", "", all_review7)
write(all_review8, "review.txt")
all_review6 = gsub("~", "", all_review5)
all_review7 = gsub("?", "", all_review6)
all_review8 = gsub("!", "", all_review7)
all_review = c(all_review, review)
all_review2 = gsub("[^가-힣]*$", " ", all_review)
all_review2 = gsub("[^가-힣]*$", " ", all_review)
all_review3 = gsub("\\.", " ", all_review2)
all_review4 = gsub(",", " ", all_review3)
all_review5 = gsub("[A-Za-z0-9]", "", all_review4)
all_review6 = gsub("~", "", all_review5)
all_review7 = gsub("?", "", all_review6)
all_review8 = gsub("!", "", all_review7)
write(all_review8, "review.txt")
all_review2 = gsub("[^가-힣]*$", " ", all_review)
write(all_review2, "review.txt")
all_review2 = gsub("[ㄱ-ㅎ]", " ", all_review)
all_review3 = gsub("\\.", " ", all_review2)
write(all_review3, "review.txt")
#all_review2 = gsub("[^가-힣]*$", " ", all_review)
all_review2 = gsub("[ㄱ-ㅎ]", " ", all_review)
all_review3 = gsub("\\.", " ", all_review2)
all_review4 = gsub(",", " ", all_review3)
all_review5 = gsub("[A-Za-z]", "", all_review4)
all_review6 = gsub("~", "", all_review5)
all_review7 = gsub("?", "", all_review6)
all_review8 = gsub("!", "", all_review7)
write(all_review3, "review.txt")
all_review6 = gsub("~", "", all_review5)
all_review7 = gsub("?", "", all_review6)
all_review8 = gsub("!", "", all_review7)
review <- html_text(mainfo)
all_review = c(all_review, review)
#all_review2 = gsub("[^가-힣]*$", " ", all_review)
all_review2 = gsub("[ㄱ-ㅎ]", " ", all_review)
all_review3 = gsub("\\.", " ", all_review2)
all_review4 = gsub(",", " ", all_review3)
all_review5 = gsub("[A-Za-z]", "", all_review4)
all_review6 = gsub("~", "", all_review5)
all_review7 = gsub("?", "", all_review6)
all_review8 = gsub("!", "", all_review7)
write(all_review8, "review.txt")
#명사단어만남기기
noun1 <- sapply(all_review7, extractNoun, USE.NAMES = F)
noun2 <- unlist(noun1)
noun3 <- Filter(function(x){nchar(x)>=2}, noun2)
noun4 <- Filter(function(x){nchar(x)<10}, noun3)
#빈도수 계산
nounCount1 <- table(noun4)
nounCount <- head(sort(nounCount1, decreasing = TRUE), 20)
palete <- brewer.pal(9,"Set1")
Sys.sleep(1)
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
wordcloud(names(nounCount), freq = nounCount, scale = c(4,1), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
dev.off()
wordcloud(names(nounCount), freq = nounCount, scale = c(4,1), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
#드루킹잡기
i=1
j=2
druking=c()
while(i < length(all_review4)){
while(j <= length(all_review4)){
if(all_review4[i] == all_review4[j])
druking = c(c, all_review4[i])
j = j + 1
}
i = i + 1
j = i + 1
}
View(druking)
#드루킹잡기
i=1
j=2
druking=c()
while(i < length(all_review2)){
while(j <= length(all_review2)){
if(all_review2[i] == all_review2[j])
druking = c(c, all_review2[i])
j = j + 1
}
i = i + 1
j = i + 1
}
print(druking)
wordcloud(names(nounCount), freq = nounCount, scale = c(10,5), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
wordcloud(names(nounCount), freq = nounCount, scale = c(8,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
wordcloud(names(nounCount), freq = nounCount, scale = c(8,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
wordcloud(names(nounCount), freq = nounCount, scale = c(8,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
dev.off()
jpeg(filename = "cloud.jpg", width = 1500, height = 1500)
wordcloud(names(nounCount), freq = nounCount, scale = c(8,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
dev.off()
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
wordcloud(names(nounCount), freq = nounCount, scale = c(8,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
dev.off()
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
dev.off()
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
jpeg(filename = "cloud.jpg", width = 500, height = 500)
wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
Sys.sleep(2)
dev.off()
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
#install.packages("KoNLP")
#install.packages("wordcloud")
#install.packages("rvest")
#install.packages("RColorBrewer")
library(wordcloud2)
#install.packages("KoNLP")
#install.packages("wordcloud")
#install.packages("rvest")
#install.packages("RColorBrewer")
install.packages("wordcloud2")
wordcloud2(nounCount)
library(wordcloud2)
#wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
wordcloud2(nounCount)
png(filename = "cloud.png", width = 1000, height = 1000)
#wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
wordcloud2(nounCount)
Sys.sleep(2)
dev.off()
jpeg(filename = "cloud.jpeg", width = 1000, height = 1000)
#wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
wordcloud2(nounCount)
dev.off()
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
#wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
wordcloud2(nounCount)
dev.off()
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
#wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
wordcloud2(nounCount)
dev.off()
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
#wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
wordcloud2(nounCount)
dev.off()
wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
dev.off()
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
#wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
wordcloud2(nounCount)
dev.off()
#wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
wordcloud2(nounCount, figPath = cloud.jpg)
wordcloud2(nounCount, word = "G")
wordcloud2(nounCount)
wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
savePlot("cloud.jpg", type="jpeg")
savePlot("C:\Users\2-20\Desktop\cloud.jpg", type="jpeg")
savePlot("C:\\Users\\2-20\\Desktop\\cloud.jpg", type="jpeg")
savePlot("cloud.jpg", type="jng")
savePlot("cloud.png", type="jng")
wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
savePlot("cloud.png", type="jng")
dev.off()
wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
savePlot("cloud.png", type="jng")
dev.off()
wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
savePlot("cloud.png", type="png")
dev.off()
png(filename = "cloud.png", width = 1000, height = 1000)
wordcloud(names(nounCount), freq = nounCount, scale = c(7,3), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
dev.off()
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
wordcloud(names(nounCount), freq = nounCount, scale = c(20,2), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
all_review6 = gsub("[^[:alpha:]]", " ", all_review5)
write(all_review6, "review.txt")
#명사단어만남기기
noun1 <- sapply(all_review7, extractNoun, USE.NAMES = F)
noun2 <- unlist(noun1)
noun3 <- Filter(function(x){nchar(x)>=2 && nchar(x)<6}, noun2)
#빈도수 계산
nounCount1 <- table(noun3)
nounCount <- head(sort(nounCount1, decreasing = TRUE), 100)
palete <- brewer.pal(8,"Set2")
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
wordcloud(names(nounCount), freq = nounCount, scale = c(20,2), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
dev.off()
wordcloud(names(nounCount), freq = nounCount, scale = c(20,2), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
while(T){    btn$clickElement()  }
remDr <- remoteDriver(remoteServerAddr="localhost", port=4445L, browserName="chrome")
remDr$open()
remDr$navigate("http://sports.news.naver.com/kbaseball/news/read.nhn?oid=109&aid=0003777015")
btn <- remDr$findElement("class", "u_cbox_btn_view_comment")
btn$clickElement()
btn <- remDr$findElement("class", "u_cbox_btn_more")
btn <- remDr$findElement("class", "u_cbox_btn_view_comment")
btn$clickElement()
btn <- remDr$findElement("class", "u_cbox_btn_more")
while(T){    btn$clickElement()  }
remDr$navigate("http://sports.news.naver.com/kbaseball/news/read.nhn?oid=109&aid=0003777015")
btn <- remDr$findElement("class", "u_cbox_btn_view_comment")
btn$clickElement()
btn <- remDr$findElement("class", "u_cbox_btn_more")
try{while(T){    btn$clickElement()  }}
try{while(T){    btn$clickElement()  }}
try{  while(T){    btn$clickElement()  }}
try{  while(T){    btn$clickElement()  }}
try(  while(T){    btn$clickElement()  })
tryCatch(print("done"))
tryCatch(print("done"))
tryCatch(while(T){btn$clickElement()}, error=print("done"))
remDr$navigate("http://sports.news.naver.com/kbaseball/news/read.nhn?oid=109&aid=0003777015")
btn <- remDr$findElement("class", "u_cbox_btn_view_comment")
btn$clickElement()
btn <- remDr$findElement("class", "u_cbox_btn_more")
tryCatch(while(T){btn$clickElement()}, error=print("done"))
remDr$navigate("http://sports.news.naver.com/kbaseball/news/read.nhn?oid=109&aid=0003777015")
btn <- remDr$findElement("class", "u_cbox_btn_view_comment")
btn$clickElement()
btn <- remDr$findElement("class", "u_cbox_btn_more")
tryCatch(while(T){btn$clickElement()}, error=function(e) print("done"))
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
#savePlot("cloud.png", type="png")
#wordcloud2(nounCount)
print(p)
p<-wordcloud(names(nounCount), freq = nounCount, scale = c(20,2), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
wordcloud(names(nounCount), freq = nounCount, scale = c(20,2), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
dev.off()
write(nounCount, "review.txt")
write(nounCount1, "review.txt")
write(noun3, "review.txt")
write(noun2, "review.txt")
all_review7 <- readLines("review1.txt")
all_review4 = gsub(",", " ", all_review3)
all_review5 = gsub("[A-Za-z]", "", all_review4)
all_review6 = gsub("[^[:alpha:]]", " ", all_review5)
noun2 <- sapply(all_review6, extractNoun, USE.NAMES = F)
noun3 <- unlist(noun2)
noun3 <- Filter(function(x){nchar<(x)>=2 && nchar(x)<=4}, noun3)
noun3 <- Filter(function(x){nchar(x)>=2 && nchar(x)<=4}, noun3)
noun3
install.packages("C:/selenium/RSelenium_1.7.1.tar.gz", repos=NULL, type="source")
library(wdman)
library(biman)
library(binman)
library(rappdirs)
library(subprocess)
#all_review7 = gsub("?", "", all_review6)
#all_review8 = gsub("!", "", all_review7)
write(all_review6, "review1.txt")
data2 <- readLines("review1.txt")
data2 <- sapply(all_review6, extractNoun, USE.NAMES = F)
library(stringr
library(stringr)
library(stringr)
data2 <- sapply(all_review6, extractNoun, USE.NAMES = F)
data2 <- sapply(all_review6, extractNoun, USE.NAMES = F)
data2
all_review6
data2
data2 <- sapply(all_review6, extractNoun, USE.NAMES = F)
data2 <- sapply(data2, extractNoun, USE.NAMES = F)
library(KoNLP)
install.packages("KoNLP")
library(KoNLP)
data2 <- sapply(all_review6, extractNoun, USE.NAMES = F)
data3 <- unlist(data2)
data3 <- Filter(function(x){nchar(x)>=2 && nchar(x) <=4}, data3)
#빈도수 계산
nounCount1 <- table(data3)
nounCount <- head(sort(nounCount1, decreasing = TRUE), 100)
palete <- brewer.pal(8,"Set2")
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
wordcloud(names(nounCount), freq = nounCount, scale = c(20,2), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
dev.off()
data3 <- Filter(function(x){nchar(x)>=2 && nchar(x) <=6}, data3)
data3
#빈도수 계산
nounCount1 <- table(data3)
nounCount1
nounCount <- head(sort(nounCount1, decreasing = TRUE), 100)
nounCount
wordcloud(names(nounCount), freq = nounCount, scale = c(20,2), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
#install.packages("KoNLP")
#install.packages("wordcloud")
#install.packages("rvest")
#install.packages("RColorBrewer")
#install.packages("wordcloud2")
#library(wordcloud2)
library(wordcloud)
wordcloud(names(nounCount), freq = nounCount, scale = c(20,2), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
install.packages("KoNLP")
install.packages("KoNLP")
#install.packages("KoNLP")
install.packages("wordcloud")
install.packages("rvest")
install.packages("RColorBrewer")
install.packages("wordcloud2")
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
#install.packages("KoNLP")
install.packages("wordcloud")
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
#install.packages("KoNLP")
install.packages("wordcloud")
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
remove.packages("wordcloud2")
#install.packages("KoNLP")
install.packages("wordcloud")
install.packages("wordcloud")
#install.packages("rvest")
#install.packages("RColorBrewer")
#install.packages("wordcloud2")
#library(wordcloud2)
library(wordcloud)
#install.packages("KoNLP")
install.packages("wordcloud")
#install.packages("rvest")
#install.packages("RColorBrewer")
#install.packages("wordcloud2")
#library(wordcloud2)
library(wordcloud)
#install.packages("KoNLP")
#install.packages("wordcloud")
#install.packages("rvest")
#install.packages("RColorBrewer")
install.packages("wordcloud2")
library(wordcloud2)
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
#jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
#wordcloud(names(nounCount), freq = nounCount, scale = c(20,2), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
savePlot("cloud.png", type="png")
wordcloud2(nounCount)
savePlot("cloud.png", type="png")
savePlot("cloud.png", type="png")
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
wordcloud2(nounCount)
dev.off()
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
wordcloud2(nounCount)
dev.off()
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
wordcloud2(nounCount)
dev.off()
nounCount <- head(sort(nounCount1, decreasing = TRUE), 50)
wordcloud2(nounCount)
nounCount <- head(sort(nounCount1, decreasing = TRUE), 70)
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
wordcloud2(nounCount)
dev.off()
savePlot("cloud.png", type="png")
install.packages("wordcloud")
library(wordcloud)
#install.packages("KoNLP")
install.packages("wordcloud")
#install.packages("rvest")
#install.packages("RColorBrewer")
#install.packages("wordcloud2")
#library(wordcloud2)
library(wordcloud)
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
source('C:/workspace/rengine/clouddddd.R', encoding = 'UTF-8')
dev.off()
jpeg(filename = "cloud.jpg", width = 1000, height = 1000)
wordcloud(names(nounCount), freq = nounCount, scale = c(20,2), rot.per =0.25, min.freq = 3, random.order = FALSE, random.color=TRUE, colors=palete)
dev.off()
noun3
#드루킹잡기
i=1
j=2
druking=c()
while(i < length(all_review2)){
while(j <= length(all_review2)){
if(all_review2[i] == all_review2[j])
druking = c(c, all_review2[i])
j = j + 1
}
i = i + 1
j = i + 1
}
#print(druking)
druking
while(i < length(all_review2)){
while(j <= length(all_review2)){
if(all_review2[i] == all_review2[j])
druking = c(c, all_review2[i])
j = j + 1
}
i = i + 1
j = i + 1
print(i)
}
#드루킹잡기
i=1
j=2
druking=c()
while(i < length(all_review2)){
while(j <= length(all_review2)){
if(all_review2[i] == all_review2[j])
druking = c(c, all_review2[i])
j = j + 1
}
i = i + 1
j = i + 1
print(i)
}
#드루킹잡기
i=1
j=2
druking=c()
while(i < length(all_review2)){
while(j <= length(all_review2)){
if(all_review2[i] == all_review2[j])
druking = c(c, all_review2[i])
j = j + 1
}
i = i + 1
j = i + 1
}
#드루킹잡기
i=1
j=2
druking=c()
while(i < length(all_review2)){
while(j <= length(all_review2)){
if(all_review2[i] == all_review2[j])
druking = c(c, all_review2[i])
j = j + 1
print(j)
}
i = i + 1
j = i + 1
}
#드루킹잡기
i=1
j=2
druking=c()
while(i < length(all_review2)){
while(j <= length(all_review2)){
if(all_review2[i] == all_review2[j])
druking = c(c, all_review2[i])
j = j + 1
print(j)
}
i = i + 1
j = i + 1
}
write(druking, "druking.txt")
druking
write(druking, "druking.txt")
write.table(druking, "druking.txt")
write.table(druking, "druking.txt", sep="\n", row.names = F, quote=F, append=T, na="NA")
save(druking, "druking.txt")
sink("druking.txt")
print(druking)
sink()
typeof(all_review4)
typeof(all_review)
typeof(data2)
data2
list <- list(all_review4)
list
typeof(list)
View(list)
list[list[duplicated(list)], which=T]
library(DescTools)
install.packages("DescTools")
library(DescTools)
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
xu <- all_review4[duplicated(all_review4)]
source('C:/workspace/Druking/clouddddd.R', encoding = 'UTF-8')
getwd()
source('C:/workspace/Druking/clouddddd.R', encoding = 'UTF-8')
source('C:/workspace/Druking/clouddddd.R', encoding = 'UTF-8')
btn <- remDr$findElement("class", "u_cbox_btn_view_comment")
